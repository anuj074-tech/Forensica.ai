{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-investigative-report.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Generates a comprehensive investigative report summarizing evidence,\n *  AI reasoning, confidence scores, and suspect rankings.\n *\n * - generateInvestigativeReport - A function that generates the investigative report.\n * - GenerateInvestigativeReportInput - The input type for the generateInvestigativeReport function.\n * - GenerateInvestigativeReportOutput - The return type for the generateInvestigativeReport function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateInvestigativeReportInputSchema = z.object({\n  evidenceSummary: z\n    .string()\n    .describe('A summary of the evidence collected at the crime scene.'),\n  aiReasoning: z\n    .string()\n    .describe('The AIâ€™s reasoning and analysis of the evidence.'),\n  confidenceScores: z\n    .string()\n    .describe('Confidence scores for different aspects of the analysis.'),\n  suspectRankings: z\n    .string()\n    .describe(\n      'Ranked list of suspects with their motives, opportunities, and proximity to the scene.'\n    ),\n  escapeRoutes: z\n    .string()\n    .describe('Possible escape routes identified by the AI.'),\n});\nexport type GenerateInvestigativeReportInput = z.infer<\n  typeof GenerateInvestigativeReportInputSchema\n>;\n\nconst GenerateInvestigativeReportOutputSchema = z.object({\n  report: z.string().describe('The comprehensive investigative report.'),\n});\nexport type GenerateInvestigativeReportOutput = z.infer<\n  typeof GenerateInvestigativeReportOutputSchema\n>;\n\nexport async function generateInvestigativeReport(\n  input: GenerateInvestigativeReportInput\n): Promise<GenerateInvestigativeReportOutput> {\n  return generateInvestigativeReportFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateInvestigativeReportPrompt',\n  input: {schema: GenerateInvestigativeReportInputSchema},\n  output: {schema: GenerateInvestigativeReportOutputSchema},\n  prompt: `You are an expert in generating investigative reports.\n\n  Based on the provided evidence summary, AI reasoning, confidence scores,\n  suspect rankings, and identified escape routes, create a comprehensive\n  investigative report that is clear, concise, and well-organized.\n\n  Evidence Summary: {{{evidenceSummary}}}\n  AI Reasoning: {{{aiReasoning}}}\n  Confidence Scores: {{{confidenceScores}}}\n  Suspect Rankings: {{{suspectRankings}}}\n  Escape Routes: {{{escapeRoutes}}}\n\n  Report:\n  `,\n});\n\nconst generateInvestigativeReportFlow = ai.defineFlow(\n  {\n    name: 'generateInvestigativeReportFlow',\n    inputSchema: GenerateInvestigativeReportInputSchema,\n    outputSchema: GenerateInvestigativeReportOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;CAOC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,yCAAyC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;IACZ,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;IACZ,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CACP;IAEJ,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;AACd;AAKA,MAAM,0CAA0C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvD,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAKO,eAAe,4BACpB,KAAuC;IAEvC,OAAO,gCAAgC;AACzC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAsC;IACtD,QAAQ;QAAC,QAAQ;IAAuC;IACxD,QAAQ,CAAC;;;;;;;;;;;;;EAaT,CAAC;AACH;AAEA,MAAM,kCAAkC,mHAAA,CAAA,KAAE,CAAC,UAAU,CACnD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/report-generator/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateInvestigativeReport as '40069713071d034c6325a8d68936b32088f829d398'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/report-generator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/report-generator/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/report-generator/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/report-generator/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/report-generator/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/report-generator/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiR,GAC9S,+CACA","debugId":null}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}