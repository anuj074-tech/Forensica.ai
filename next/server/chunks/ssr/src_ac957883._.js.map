{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ntype PageHeaderProps = {\n  title: string;\n  description: string;\n  className?: string;\n  children?: React.ReactNode;\n};\n\nexport function PageHeader({ title, description, className, children }: PageHeaderProps) {\n  return (\n    <div className={cn(\"mb-6 flex items-start justify-between\", className)}>\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight text-foreground\">{title}</h1>\n        <p className=\"mt-1 text-muted-foreground\">{description}</p>\n      </div>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AASO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAmB;IACrF,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;;0BAC1D,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAqD;;;;;;kCACnE,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;;;;;;;YAE5C;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/create-case-dossier.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A comprehensive case analysis AI agent.\n *\n * - createCaseDossier - A function that handles the full case analysis and dossier generation.\n * - CaseDossierInput - The input type for the createCaseDossier function.\n * - CaseDossierOutput - The return type for the createCaseDossier function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nexport const CaseDossierInputSchema = z.object({\n  crimeScenePictures: z\n    .array(z.string())\n    .describe('An array of data URIs for crime scene pictures.'),\n  evidenceLog: z\n    .string()\n    .describe('A log of all collected evidence and their descriptions.'),\n  witnessStatements: z\n    .string()\n    .describe('A compilation of all witness statements.'),\n  victimRelationships: z\n    .string()\n    .describe(\n      \"Descriptions of suspects' relationships with the victim, including motives and alibis.\"\n    ),\n  forensicReport: z\n    .string()\n    .describe('The official forensic report findings.'),\n});\nexport type CaseDossierInput = z.infer<typeof CaseDossierInputSchema>;\n\nexport const CaseDossierOutputSchema = z.object({\n  caseSummary: z\n    .string()\n    .describe(\n      \"A brief, high-level summary of the entire case and the AI's primary conclusions.\"\n    ),\n  victimProfile: z.string().describe('A profile of the victim.'),\n  suspectProfiles: z.array(\n    z.object({\n      name: z.string(),\n      profile: z.string().describe('A detailed profile of the suspect.'),\n      motive: z.string(),\n      opportunity: z.string(),\n      deceptionScore: z\n        .number()\n        .describe('A score from 0-1 indicating likelihood of deception.'),\n    })\n  ),\n  evidenceSummary: z\n    .string()\n    .describe('A summary of the key pieces of evidence and their implications.'),\n  crimeSceneReconstruction: z\n    .string()\n    .describe(\n      'A narrative reconstructing the likely sequence of events at the crime scene.'\n    ),\n  timelineOfEvents: z\n    .array(\n      z.object({\n        time: z.string(),\n        event: z.string(),\n      })\n    )\n    .describe(\n      'A chronological timeline of events before, during, and after the crime.'\n    ),\n  mainPersonsOfInterest: z\n    .array(z.string())\n    .describe('A ranked list of the main persons of interest.'),\n  potentialInconsistencies: z\n    .array(z.string())\n    .describe(\n      'A list of identified inconsistencies across all provided data.'\n    ),\n  investigativeLeads: z\n    .array(z.string())\n    .describe(\n      'A list of actionable next steps and investigative leads for human detectives.'\n    ),\n});\nexport type CaseDossierOutput = z.infer<typeof CaseDossierOutputSchema>;\n\nexport async function createCaseDossier(\n  input: CaseDossierInput\n): Promise<CaseDossierOutput> {\n  return createCaseDossierFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'createCaseDossierPrompt',\n  input: {schema: CaseDossierInputSchema},\n  output: {schema: CaseDossierOutputSchema},\n  prompt: `You are a world-renowned criminal investigator AI, known as Forensica. Your task is to synthesize disparate pieces of information into a coherent and comprehensive case dossier. Analyze the provided data meticulously to uncover links, inconsistencies, and actionable leads.\n\n  **Case Files:**\n\n  **1. Crime Scene Photos:**\n  {{#each crimeScenePictures}}\n  - Image: {{media url=this}}\n  {{/each}}\n  *Analyze these images for environmental clues, signs of struggle, points of entry/exit, and any objects that seem out of place or could be potential evidence.*\n\n  **2. Evidence Log:**\n  \\`\\`\\`\n  {{{evidenceLog}}}\n  \\`\\`\\`\n  *Correlate the items in the evidence log with the crime scene photos and other case information. What is the significance of each piece of evidence?*\n\n  **3. Witness Statements:**\n  \\`\\`\\`\n  {{{witnessStatements}}}\n  \\`\\`\\`\n  *Scrutinize these statements for contradictions, emotional cues, and temporal inconsistencies. Compare statements against each other and against known facts.*\n\n  **4. Victim & Suspect Relationships:**\n  \\`\\`\\`\n  {{{victimRelationships}}}\n  \\`\\`\\`\n  *Map out the social and professional network of the victim. Analyze the provided relationships, motives, and alibis for each suspect. Who had the means, motive, and opportunity?*\n\n  **5. Forensic Report:**\n  \\`\\`\\`\n  {{{forensicReport}}}\n  \\`\\`\\`\n  *Integrate the scientific findings from the forensic report. How do these findings support or refute suspect alibis and witness statements? What do they tell you about the sequence of events?*\n\n  **Your Mission:**\n\n  Based on a thorough analysis of all the above information, generate a complete case dossier. The output must be a JSON object that strictly adheres to the provided schema. Be thorough, logical, and insightful in your analysis for each field.\n\n  **Output Schema:**\n  ${JSON.stringify(CaseDossierOutputSchema, null, 2)}\n  `,\n});\n\nconst createCaseDossierFlow = ai.defineFlow(\n  {\n    name: 'createCaseDossierFlow',\n    inputSchema: CaseDossierInputSchema,\n    outputSchema: CaseDossierOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAqFsB,oBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport {useState} from 'react';\nimport {useRouter} from 'next/navigation';\nimport Image from 'next/image';\nimport {\n  FileText,\n  FileInput,\n  Users,\n  Heart,\n  FlaskConical,\n  Camera,\n  Loader2,\n} from 'lucide-react';\nimport {Button} from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {Textarea} from '@/components/ui/textarea';\nimport {Label} from '@/components/ui/label';\nimport {Input} from '@/components/ui/input';\nimport {useToast} from '@/hooks/use-toast';\nimport {PageHeader} from '@/components/page-header';\nimport { CaseDossierInput, createCaseDossier } from '@/ai/flows/create-case-dossier';\n\n// Helper to convert file to base64\nconst toBase64 = (file: File): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = reject;\n  });\n\nexport default function CaseAnalysisPage() {\n  const router = useRouter();\n  const {toast} = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [crimeScenePictures, setCrimeScenePictures] = useState<string[]>([]);\n  const [pictureFiles, setPictureFiles] = useState<File[]>([]);\n\n  const handlePictureUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const filesArray = Array.from(e.target.files);\n      const dataUrls = filesArray.map(file => URL.createObjectURL(file));\n      setCrimeScenePictures(prev => [...prev, ...dataUrls]);\n      setPictureFiles(prev => [...prev, ...filesArray]);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsLoading(true);\n    toast({\n      title: 'Starting Analysis...',\n      description:\n        'The AI is processing all case data. This may take a moment.',\n    });\n\n    const formData = new FormData(e.currentTarget);\n    const formValues = Object.fromEntries(formData.entries());\n\n    try {\n      const pictureDataUris = await Promise.all(pictureFiles.map(toBase64));\n\n      const input: CaseDossierInput = {\n        crimeScenePictures: pictureDataUris,\n        evidenceLog: formValues.evidenceLog as string,\n        witnessStatements: formValues.witnessStatements as string,\n        victimRelationships: formValues.victimRelationships as string,\n        forensicReport: formValues.forensicReport as string,\n      };\n\n      const result = await createCaseDossier(input);\n\n      // Store result in session storage to pass to the report page\n      sessionStorage.setItem('caseDossierResult', JSON.stringify(result));\n      \n      router.push('/report');\n\n    } catch (error) {\n      console.error(\"Error generating dossier:\", error);\n      toast({\n        variant: \"destructive\",\n        title: \"Analysis Failed\",\n        description: \"An error occurred while generating the report. Please try again.\"\n      })\n    } finally {\n        setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <PageHeader\n        title=\"Comprehensive Case Analysis\"\n        description=\"Upload all case materials to generate a complete investigative dossier.\"\n      />\n      <form onSubmit={handleSubmit}>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <div className=\"space-y-8\">\n            {/* Crime Scene Pictures */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Camera /> Crime Scene Pictures\n                </CardTitle>\n                <CardDescription>\n                  Upload images from the crime scene.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid gap-4\">\n                  <Input\n                    id=\"picture-upload\"\n                    type=\"file\"\n                    multiple\n                    accept=\"image/*\"\n                    onChange={handlePictureUpload}\n                    className=\"cursor-pointer\"\n                    disabled={isLoading}\n                  />\n                  {crimeScenePictures.length > 0 && (\n                    <div className=\"grid grid-cols-3 gap-2\">\n                      {crimeScenePictures.map((src, index) => (\n                        <div key={index} className=\"relative aspect-square\">\n                          <Image\n                            src={src}\n                            alt={`Crime Scene Photo ${index + 1}`}\n                            fill\n                            className=\"rounded-md object-cover\"\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Evidence Input */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FileInput /> Evidence Log\n                </CardTitle>\n                <CardDescription>\n                  List all pieces of evidence and their descriptions.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Textarea\n                  name=\"evidenceLog\"\n                  placeholder=\"\"\n                  className=\"min-h-[150px]\"\n                  disabled={isLoading}\n                />\n              </CardContent>\n            </Card>\n\n            {/* Witness Statements */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Users /> Witness Statements\n                </CardTitle>\n                <CardDescription>\n                  Enter each witness statement clearly.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Textarea\n                  name=\"witnessStatements\"\n                  placeholder=\"\"\n                  className=\"min-h-[150px]\"\n                  disabled={isLoading}\n                />\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"space-y-8\">\n            {/* Relationships */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Heart /> Relationships with Victim\n                </CardTitle>\n                <CardDescription>\n                  Describe suspects' relationships, motives, and alibis.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Textarea\n                  name=\"victimRelationships\"\n                  placeholder=\"\"\n                  className=\"min-h-[150px]\"\n                  disabled={isLoading}\n                />\n              </CardContent>\n            </Card>\n\n            {/* Forensic Report */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FlaskConical /> Forensic Report\n                </CardTitle>\n                <CardDescription>\n                  Input findings from the forensic analysis.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Textarea\n                  name=\"forensicReport\"\n                  placeholder=\"\"\n                  className=\"min-h-[150px]\"\n                  disabled={isLoading}\n                />\n              </CardContent>\n            </Card>\n\n            {/* Submission */}\n            <Card className=\"bg-primary/5 dark:bg-primary/10\">\n              <CardHeader>\n                <CardTitle>Ready for Analysis?</CardTitle>\n                <CardDescription>\n                  The AI will perform a deep analysis of all provided data to\n                  generate a comprehensive investigative dossier.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={isLoading}\n                  size=\"lg\"\n                >\n                  {isLoading ? (\n                    <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />\n                  ) : (\n                    <FileText className=\"mr-2 h-5 w-5\" />\n                  )}\n                  Generate Dossier\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}