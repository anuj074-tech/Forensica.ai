{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/infer-weapon-usage.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A weapon usage inference AI agent.\n *\n * - inferWeaponUsage - A function that handles the weapon usage inference process.\n * - InferWeaponUsageInput - The input type for the inferWeaponUsage function.\n * - InferWeaponUsageOutput - The return type for the inferWeaponUsage function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst InferWeaponUsageInputSchema = z.object({\n  woundDescription: z\n    .string()\n    .describe('Description of the wound, including size, shape, and location.'),\n  sceneDescription: z.string().describe('Description of the crime scene.'),\n  victimDescription: z.string().describe('Description of the victim.'),\n  weaponMarkDataUri: z\n    .string()\n    .optional()\n    .describe(\n      \"A photo of a potential weapon mark, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type InferWeaponUsageInput = z.infer<typeof InferWeaponUsageInputSchema>;\n\nconst InferWeaponUsageOutputSchema = z.object({\n  weaponClass: z.string().describe('The likely class of weapon used.'),\n  weaponFeatures: z.string().describe('Likely features of the weapon.'),\n  confidence: z.number().describe('Confidence score for the inference.'),\n  reasoning: z.string().describe('Explanation of the reasoning process.'),\n});\nexport type InferWeaponUsageOutput = z.infer<typeof InferWeaponUsageOutputSchema>;\n\nexport async function inferWeaponUsage(input: InferWeaponUsageInput): Promise<InferWeaponUsageOutput> {\n  return inferWeaponUsageFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'inferWeaponUsagePrompt',\n  input: {schema: InferWeaponUsageInputSchema},\n  output: {schema: InferWeaponUsageOutputSchema},\n  prompt: `You are an expert forensic analyst specializing in weapon identification.\n\nYou will use the wound description, scene description, and victim description to infer the likely class of weapon used, its likely features, and provide a confidence score for your inference. Explain your reasoning process.\n\nWound Description: {{{woundDescription}}}\nScene Description: {{{sceneDescription}}}\nVictim Description: {{{victimDescription}}}\n\n{{#if weaponMarkDataUri}}\nPotential Weapon Mark: {{media url=weaponMarkDataUri}}\n{{/if}}\n\nConsider the following output schema:\n${JSON.stringify(InferWeaponUsageOutputSchema.shape, null, 2)}`,\n});\n\nconst inferWeaponUsageFlow = ai.defineFlow(\n  {\n    name: 'inferWeaponUsageFlow',\n    inputSchema: InferWeaponUsageInputSchema,\n    outputSchema: InferWeaponUsageOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,kBAAkB,uIAAA,CAAA,IAAC,CAChB,MAAM,GACN,QAAQ,CAAC;IACZ,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACtC,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACvC,mBAAmB,uIAAA,CAAA,IAAC,CACjB,MAAM,GACN,QAAQ,GACR,QAAQ,CACP;AAEN;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACpC,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGO,eAAe,iBAAiB,KAA4B;IACjE,OAAO,qBAAqB;AAC9B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;;;;;;;;;;AAaX,EAAE,KAAK,SAAS,CAAC,6BAA6B,KAAK,EAAE,MAAM,IAAI;AAC/D;AAEA,MAAM,uBAAuB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACxC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/weapon-inference/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {inferWeaponUsage as '40e4587c55b8b7286266eb9e929cefcbbd866e34af'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\n\ntype PageHeaderProps = {\n  title: string;\n  description: string;\n  className?: string;\n  children?: React.ReactNode;\n};\n\nexport function PageHeader({ title, description, className, children }: PageHeaderProps) {\n  return (\n    <div className={cn(\"mb-6 flex items-start justify-between\", className)}>\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight text-foreground\">{title}</h1>\n        <p className=\"mt-1 text-muted-foreground\">{description}</p>\n      </div>\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AASO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAmB;IACrF,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;;0BAC1D,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAqD;;;;;;kCACnE,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;;;;;;;YAE5C;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/weapon-inference/weapon-inference-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WeaponInferenceClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call WeaponInferenceClient() from the server but WeaponInferenceClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/weapon-inference/weapon-inference-client.tsx <module evaluation>\",\n    \"WeaponInferenceClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,sFACA","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/weapon-inference/weapon-inference-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WeaponInferenceClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call WeaponInferenceClient() from the server but WeaponInferenceClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/weapon-inference/weapon-inference-client.tsx\",\n    \"WeaponInferenceClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,kEACA","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/weapon-inference/page.tsx"],"sourcesContent":["import { PageHeader } from \"@/components/page-header\";\nimport { WeaponInferenceClient } from \"./weapon-inference-client\";\n\nexport default function WeaponInferencePage() {\n  return (\n    <div>\n      <PageHeader\n        title=\"Weapon Inference\"\n        description=\"Infer weapon characteristics based on wound data, scene descriptions, and evidence photos.\"\n      />\n      <WeaponInferenceClient />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;;0BACC,8OAAC,oIAAA,CAAA,aAAU;gBACT,OAAM;gBACN,aAAY;;;;;;0BAEd,8OAAC,mKAAA,CAAA,wBAAqB;;;;;;;;;;;AAG5B","debugId":null}}]
}